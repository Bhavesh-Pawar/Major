package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Java_005fdifficult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");


    if(session.getAttribute("user_id")==null)
    {
        response.sendRedirect("sign_in.html");
    }

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Java Difficult Question</title>\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"test.css\">\n");
      out.write("    </head>\n");
      out.write("<body background=\"images/bg1.jpg\">\n");
      out.write("    <div id=\"mySidebar\" class=\"sidebar\">\n");
      out.write("        <a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\"><img src=\"images/close.png\"width=\"30px\"height=\"30px\"></a>\n");
      out.write("        <a href=\"#\">Profile</a>\n");
      out.write("        <a href=\"#\">Services</a>\n");
      out.write("        <a href=\"#\">Clients</a>\n");
      out.write("        <a href=\"#\">About</a>\n");
      out.write("    </div>\n");
      out.write("    <table style=\"width:100%;background-color:white;border-radius:30px;height:60px;opacity:0.7\">\n");
      out.write("        <tr align=\"center\">\n");
      out.write("             <td><button class=\"openbtn\" onclick=\"openNav()\"><img src=\"images/hamburger.png\"width=\"50px\"height=\"50px\"></button><td>  \n");
      out.write("  \n");
      out.write("            <td><img src=\"images/logo.png\"width=\"150px\"height=\"150px\"></td>\n");
      out.write("            <td class=\"titletheme\">Test Your Skills</td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("        \n");
      out.write("            <span id=\"display\" class=\"timer\"></span>\n");
      out.write("        \n");
      out.write("        <div id=\"submitted\"></div>          \n");
      out.write("        </tr>\n");
      out.write("        </table>\n");
      out.write("        <script>\n");
      out.write("           function openNav() {\n");
      out.write("             document.getElementById(\"mySidebar\").style.width = \"250px\";\n");
      out.write("             document.getElementById(\"main\").style.marginLeft = \"250px\";\n");
      out.write("           }\n");
      out.write("           \n");
      out.write("           function closeNav() {\n");
      out.write("             document.getElementById(\"mySidebar\").style.width = \"0\";\n");
      out.write("             document.getElementById(\"main\").style.marginLeft= \"0\";\n");
      out.write("           }\n");
      out.write("                    window.history.forward(); \n");
      out.write("                   function noBack() { \n");
      out.write("                       window.history.forward(); \n");
      out.write("                   } \n");
      out.write("                   window.history.forward(); \n");
      out.write("           function noBack() { \n");
      out.write("               window.history.forward(); \n");
      out.write("           } \n");
      out.write("           </script>\n");
      out.write("           <script>\n");
      out.write("            var div = document.getElementById('display');\n");
      out.write("            var submitted = document.getElementById('submitted');\n");
      out.write("        \n");
      out.write("              function CountDown(duration, display) {\n");
      out.write("        \n");
      out.write("                        var timer = duration, minutes, seconds;\n");
      out.write("        \n");
      out.write("                      var interVal=  setInterval(function () {\n");
      out.write("                            minutes = parseInt(timer / 60, 10);\n");
      out.write("                            seconds = parseInt(timer % 60, 10);\n");
      out.write("        \n");
      out.write("                            minutes = minutes < 10 ? \"0\" + minutes : minutes;\n");
      out.write("                            seconds = seconds < 10 ? \"0\" + seconds : seconds;\n");
      out.write("                    display.innerHTML =\"<b>\" + minutes + \"m : \" + seconds + \"s\" + \"</b>\";\n");
      out.write("                            if (timer > 0) {\n");
      out.write("                               --timer;\n");
      out.write("                            }else{\n");
      out.write("                       clearInterval(interVal)\n");
      out.write("                                SubmitFunction();\n");
      out.write("                             }\n");
      out.write("        \n");
      out.write("                       },1000);\n");
      out.write("        \n");
      out.write("                }\n");
      out.write("        \n");
      out.write("              function SubmitFunction(){\n");
      out.write("                document.getElementById('C').submit();\n");
      out.write("        \n");
      out.write("               }\n");
      out.write("             function demoVisibility() \n");
      out.write("             {\n");
      out.write("                document.getElementById('question').style.visibility='visible'; \n");
      out.write("                document.getElementById('startButton').style.visibility='hidden'; \n");
      out.write("                document.getElementById('display').style.visibility='visible'; \n");
      out.write("                CountDown(1200,div);\n");
      out.write("             }  \n");
      out.write("            </script>    \n");
      out.write("    <div id=\"startButton\"  onclick=demoVisibility() class=\"startTest\">Start the test</div> \n");
      out.write("    <div style=\"visibility: hidden;\" id=\"question\">\n");
      out.write("    <form action=\"get_difficult_java.jsp\" name=\"C\" id=\"C\" method=\"POST\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>1.  Assume that Base b = new Derived(); appears in a client program. What is the result of the call b.methodOne();?</div>\n");
      out.write("        <pre>\n");
      out.write("        public class Base\n");
      out.write("{\n");
      out.write("   public void methodOne()\n");
      out.write("   {\n");
      out.write("      System.out.print(\"A\");\n");
      out.write("      methodTwo();\n");
      out.write("   }\n");
      out.write("\n");
      out.write("   public void methodTwo()\n");
      out.write("   {\n");
      out.write("      System.out.print(\"B\");\n");
      out.write("   }\n");
      out.write("}\n");
      out.write("\n");
      out.write("public class Derived extends Base\n");
      out.write("{\n");
      out.write("   public void methodOne()\n");
      out.write("   {\n");
      out.write("      super.methodOne();\n");
      out.write("      System.out.print(\"C\");\n");
      out.write("   }\n");
      out.write("\n");
      out.write("   public void methodTwo()\n");
      out.write("   {\n");
      out.write("      super.methodTwo();\n");
      out.write("      System.out.print(\"D\");\n");
      out.write("   }\n");
      out.write("}    \n");
      out.write("        </pre>        \n");
      out.write("        <div>a<input type=\"radio\" name=\"111\" value=\"a\"> ABDC</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"111\" value=\"b\"> AB</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"111\" value=\"c\"> ABCD</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"111\" value=\"d\"> ACBD</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>2. If you have the following classes. Which of the following constructors would be valid for Point3D?</div>\n");
      out.write("        <pre>\n");
      out.write("            public class Point2D {\n");
      out.write("   public int x;\n");
      out.write("   public int y;\n");
      out.write("\n");
      out.write("   public Point2D() {}\n");
      out.write("\n");
      out.write("   public Point2D(int x,int y) {\n");
      out.write("      this.x = x;\n");
      out.write("      this.y = y;\n");
      out.write("   }\n");
      out.write("  // other methods\n");
      out.write("}\n");
      out.write("\n");
      out.write("public class Point3D extends Point2D\n");
      out.write("{\n");
      out.write("   public int z;\n");
      out.write("\n");
      out.write("   // other code\n");
      out.write("}\n");
      out.write("\n");
      out.write("I.  public Point3D() {}\n");
      out.write("II. public Point3D(int x, int y, int z)\n");
      out.write("    {\n");
      out.write("       super(x,y);\n");
      out.write("       this.z = z;\n");
      out.write("    }\n");
      out.write("III. public Point3D(int x, int y)\n");
      out.write("     {\n");
      out.write("        this.x = x;\n");
      out.write("        this.y = y;\n");
      out.write("        this.z = 0;\n");
      out.write("     }\n");
      out.write("        </pre>\n");
      out.write("        <div>a<input type=\"radio\" name=\"112\" value=\"a\"> II only</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"112\" value=\"b\"> III only </div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"112\" value=\"c\"> I, II, and III</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"112\" value=\"d\"> I and II only </div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>3. In Iterator, hasMoreElements() method of Enumeration has been changed to:</div>\n");
      out.write("        <div>a<input type=\"radio\" name=\"113\" value=\"a\"> hasNextElement()</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"113\" value=\"b\"> hasNext()</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"113\" value=\"c\"> isNext()</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"113\" value=\"d\"> name remain same</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>4. Enumeration returned by ArrayList is</div>\n");
      out.write("        <div>a<input type=\"radio\" name=\"114\" value=\"a\"> Fail-fast</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"114\" value=\"b\"> Fail-Safe</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"114\" value=\"c\"> None</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"114\" value=\"d\"> null</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("\n");
      out.write("        <div>5. Which of these process occur automatically by java run time system?</div>\n");
      out.write("        <div>a<input type=\"radio\" name=\"115\" value=\"a\"> Serialization</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"115\" value=\"b\"> Externalization</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"115\" value=\"c\"> File Filtering</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"115\" value=\"d\"> Garbage collection</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("\n");
      out.write("        <div>6.  Which of these classes is not included in java.lang?</div>\n");
      out.write("        <div>a<input type=\"radio\" name=\"116\" value=\"a\"> Byte</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"116\" value=\"b\"> Integer</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"116\" value=\"c\">  Array</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"116\" value=\"d\"> class</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("\n");
      out.write("        <div>7. What is the output of the following code snippet?</div>\n");
      out.write("        <pre>\n");
      out.write("            public class Tester {\n");
      out.write("    Public static void main (String[ ] args) {\n");
      out.write("           for(int loop = 0;loop < 5;loop++) {\n");
      out.write("                 if(loop > 2) {\n");
      out.write("                      continue;\n");
      out.write("                 }\n");
      out.write("                 if(loop>4) {\n");
      out.write("                       break;\n");
      out.write("                 }\n");
      out.write("                 System.out.println(loop) ;\n");
      out.write("           }\n");
      out.write("     }\n");
      out.write("}\n");
      out.write("\n");
      out.write("        </pre>\n");
      out.write("        <div>a<input type=\"radio\" name=\"117\" value=\"a\"> 0 1 2</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"117\" value=\"b\"> 0</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"117\" value=\"c\"> 0 1 2 3 4</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"117\" value=\"d\"> 0 1</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("\n");
      out.write("        <div>8. What is the output of the following code snippet?</div>\n");
      out.write("        <pre>\n");
      out.write("            class Demo{\n");
      out.write("  public static int specialAdd(int num1) {\n");
      out.write("         if (num1!=0)\n");
      out.write("              return (num1+2)+specialAdd(num1-1) ;\n");
      out.write("         else\n");
      out.write("              return 3;\n");
      out.write("  }\n");
      out.write("  public static int extraordinaryAdd(int num2) {\n");
      out.write("          if (num2!=0)\n");
      out.write("               return specialAdd(num2)+extraordinaryAdd(num2-1) ;\n");
      out.write("           else\n");
      out.write("               return 0;\n");
      out.write("  }\n");
      out.write("   public static void main (String [ ] args) {\n");
      out.write("              System.out.println( (extraordinaryAdd(5) ) ) ;\n");
      out.write("  }\n");
      out.write("}   \n");
      out.write("        </pre>\n");
      out.write("        <div>a<input type=\"radio\" name=\"118\" value=\"a\"> 80</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"118\" value=\"b\"> 72</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"118\" value=\"c\"> 25</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"118\" value=\"d\"> 52</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("\n");
      out.write("        <div>9. What is the output of the code given below when run with the default Junit runner?</div>\n");
      out.write("        <pre>\n");
      out.write("            class Computation {\n");
      out.write(" public int add(int num1, int num2) {\n");
      out.write("          return num1 + num2 ;\n");
      out.write(" }\n");
      out.write(" public int divide(int num1, int num2) {\n");
      out.write("          return num1 / num2 ;\n");
      out.write(" }\n");
      out.write("}\n");
      out.write("public class TestComputation {\n");
      out.write("  Computation comput = new Computation ( ) ;\n");
      out.write("  @Test\n");
      out.write("   public void testAdd1 ( ) {\n");
      out.write("          int expected = 5 ;\n");
      out.write("              int actual = comput.add(2, 3) ;\n");
      out.write("          Assert.assertEquals(expected, actual) ;\n");
      out.write(" }\n");
      out.write(" @Test\n");
      out.write("  public void testAdd2 ( ) {\n");
      out.write("           int expected = 7 ;\n");
      out.write("           int actual = comput.add(2, 5) ;\n");
      out.write("           Assert.assertEquals(expected , actual) ;\n");
      out.write(" }\n");
      out.write("}      \n");
      out.write("        </pre>\n");
      out.write("        <div>a<input type=\"radio\" name=\"119\" value=\"a\"> Both testAdd1 and testAdd2 fail</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"119\" value=\"b\"> testAdd1 fails and testAdd2 passes</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"119\" value=\"c\"> Both testAdd1 and testAdd2 pass</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"119\" value=\"d\"> testAdd1 passes and testAdd2 fails </div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("\n");
      out.write("        <div>10. What is the output of the following code snippet?</div>\n");
      out.write("        <pre>\n");
      out.write("            public class ExceptionExample {\n");
      out.write("   public void checkForExceptions(int num1, int num2) {\n");
      out.write("          int intArr [ ] = {1,2,3} ;\n");
      out.write("          String str = null ;\n");
      out.write("          System.out.println(\"Before any exception!\") ;\n");
      out.write("          try{\n");
      out.write("                str.charAt(0) ;\n");
      out.write("                System.out.println(num1 / num1) ;\n");
      out.write("                System.out.println(\"Enjoy no exception!\") ;\n");
      out.write("          }\n");
      out.write("          catch (ArithmeticException e) {\n");
      out.write("                     System.out.println(\"ArithmeticException handler!\") ;\n");
      out.write("           } catch (NullPointerException e) {\n");
      out.write("                      System.out.println(\"NullPointException handler!\") ;\n");
      out.write("           } catch (Exception e) {\n");
      out.write(" \n");
      out.write("                     System.out.println(\"Default exception handler!\") ;\n");
      out.write("         } finally {\n");
      out.write("                 System.out.println(\"In finally!\");\n");
      out.write("         }\n");
      out.write("         System.out.println(\"After handling exception!\") ;\n");
      out.write("   }\n");
      out.write("   public static void main(String [ ] args) \n");
      out.write("   {\n");
      out.write("          ExceptionExample exceptionExample = new ExceptionExample( ) ;\n");
      out.write("          try {\n");
      out.write("                      exceptionExample.checkForExceptions(2, 0) ;\n");
      out.write("           } catch (ArithmeticException e) {\n");
      out.write("                       System.out.println(\"ArithmeticException handler in main!\") ;\n");
      out.write("           }\n");
      out.write("           System.out.println(\"End of main\") ;\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("        </pre>\n");
      out.write("        <div>a<input type=\"radio\" name=\"120\" value=\"a\"> <pre>Before any exception!\n");
      out.write("\n");
      out.write("Enjoy no exception!\n");
      out.write("\n");
      out.write("In finally!\n");
      out.write("\n");
      out.write("After handling exception!\n");
      out.write("\n");
      out.write("End of main</pre>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"120\" value=\"b\"><pre>Before any exception!\n");
      out.write("\n");
      out.write("Default exception handler!\n");
      out.write("\n");
      out.write("In finally!\n");
      out.write("\n");
      out.write("After handling exception!\n");
      out.write("\n");
      out.write("End of main\n");
      out.write("\n");
      out.write("</pre></div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"120\" value=\"c\"> <pre>Before any exception!\n");
      out.write("\n");
      out.write("ArithmeticException handler!\n");
      out.write("\n");
      out.write("In finally!\n");
      out.write("\n");
      out.write("After handling exception!\n");
      out.write("\n");
      out.write("ArithmeticException handler in main!\n");
      out.write("\n");
      out.write("End of main</pre></div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"120\" value=\"d\"> <pre>Before any exception!\n");
      out.write("\n");
      out.write("NullPointerException handler!\n");
      out.write("\n");
      out.write("In finally!\n");
      out.write("\n");
      out.write("After handling exception!\n");
      out.write("\n");
      out.write("End of main\n");
      out.write("\n");
      out.write("</pre></div>  \n");
      out.write("        </div>\n");
      out.write("        <input class=\"btn\" type=\"submit\">\n");
      out.write("        ");

            session.setAttribute("status", "true");
         
      out.write(" \n");
      out.write("    </form>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
