package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Java_005fmedium_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");


    if(session.getAttribute("user_id")==null)
    {
        response.sendRedirect("sign_in.html");
    }

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Java medium question</title>\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"test.css\">\n");
      out.write("   </head>\n");
      out.write("<body background=\"images/bg1.jpg\">\n");
      out.write("   <div id=\"mySidebar\" class=\"sidebar\">\n");
      out.write("      <a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\"><img src=\"images/close.png\"width=\"30px\"height=\"30px\"></a>\n");
      out.write("      <a href=\"#\">Profile</a>\n");
      out.write("      <a href=\"#\">Services</a>\n");
      out.write("      <a href=\"#\">Clients</a>\n");
      out.write("      <a href=\"#\">About</a>\n");
      out.write("  </div>\n");
      out.write("  <table style=\"width:100%;background-color:white;border-radius:30px;height:60px;opacity:0.7\">\n");
      out.write("      <tr align=\"center\">\n");
      out.write("           <td><button class=\"openbtn\" onclick=\"openNav()\"><img src=\"images/hamburger.png\"width=\"50px\"height=\"50px\"></button><td>  \n");
      out.write("\n");
      out.write("          <td><img src=\"images/logo.png\"width=\"150px\"height=\"150px\"></td>\n");
      out.write("          <td class=\"titletheme\">Test Your Skills</td>\n");
      out.write("      </tr>\n");
      out.write("      <tr>\n");
      out.write("      \n");
      out.write("          <span id=\"display\" class=\"timer\"></span>\n");
      out.write("      \n");
      out.write("      <div id=\"submitted\"></div>          \n");
      out.write("      </tr>\n");
      out.write("      </table>\n");
      out.write("      <script>\n");
      out.write("         function openNav() {\n");
      out.write("           document.getElementById(\"mySidebar\").style.width = \"250px\";\n");
      out.write("           document.getElementById(\"main\").style.marginLeft = \"250px\";\n");
      out.write("         }\n");
      out.write("         \n");
      out.write("         function closeNav() {\n");
      out.write("           document.getElementById(\"mySidebar\").style.width = \"0\";\n");
      out.write("           document.getElementById(\"main\").style.marginLeft= \"0\";\n");
      out.write("         }\n");
      out.write("                  window.history.forward(); \n");
      out.write("                 function noBack() { \n");
      out.write("                     window.history.forward(); \n");
      out.write("                 } \n");
      out.write("                 window.history.forward(); \n");
      out.write("         function noBack() { \n");
      out.write("             window.history.forward(); \n");
      out.write("         } \n");
      out.write("         </script>\n");
      out.write("         <script>\n");
      out.write("          var div = document.getElementById('display');\n");
      out.write("          var submitted = document.getElementById('submitted');\n");
      out.write("      \n");
      out.write("            function CountDown(duration, display) {\n");
      out.write("      \n");
      out.write("                      var timer = duration, minutes, seconds;\n");
      out.write("      \n");
      out.write("                    var interVal=  setInterval(function () {\n");
      out.write("                          minutes = parseInt(timer / 60, 10);\n");
      out.write("                          seconds = parseInt(timer % 60, 10);\n");
      out.write("      \n");
      out.write("                          minutes = minutes < 10 ? \"0\" + minutes : minutes;\n");
      out.write("                          seconds = seconds < 10 ? \"0\" + seconds : seconds;\n");
      out.write("                  display.innerHTML =\"<b>\" + minutes + \"m : \" + seconds + \"s\" + \"</b>\";\n");
      out.write("                          if (timer > 0) {\n");
      out.write("                             --timer;\n");
      out.write("                          }else{\n");
      out.write("                     clearInterval(interVal)\n");
      out.write("                              SubmitFunction();\n");
      out.write("                           }\n");
      out.write("      \n");
      out.write("                     },1000);\n");
      out.write("      \n");
      out.write("              }\n");
      out.write("      \n");
      out.write("            function SubmitFunction(){\n");
      out.write("              submitted.innerHTML=\"Time is up!\";\n");
      out.write("              document.getElementById('C').submit();\n");
      out.write("      \n");
      out.write("             }\n");
      out.write("           function demoVisibility() \n");
      out.write("           {\n");
      out.write("              document.getElementById('question').style.visibility='visible'; \n");
      out.write("              document.getElementById('startButton').style.visibility='hidden'; \n");
      out.write("              document.getElementById('display').style.visibility='visible'; \n");
      out.write("              CountDown(1200,div);\n");
      out.write("           }  \n");
      out.write("          </script>\n");
      out.write("      <div id=\"startButton\"  onclick=demoVisibility() class=\"startTest\">Start the test</div> \n");
      out.write("      <div style=\"visibility: hidden;\" id=\"question\">\n");
      out.write("          <form action=\"get_medium_java.jsp\" name=\"C\" id=\"C\" method=\"POST\">\n");
      out.write("      <div class=\"container\">\n");
      out.write("        <div>1. Given the following class declarations, what is the output from Student s1 = new GradStudent(); followed by s1.getInfo();?<br>\n");
      out.write("<pre>\n");
      out.write("public class Student {\n");
      out.write("   public String getFood() {\n");
      out.write("      return \"Pizza\";\n");
      out.write("   }\n");
      out.write("   public String getInfo()  {\n");
      out.write("      return this.getFood();\n");
      out.write("   }\n");
      out.write("}\n");
      out.write("\n");
      out.write("public class GradStudent extends Student {\n");
      out.write("   public String getFood() {\n");
      out.write("      return \"Taco\";\n");
      out.write("   }\n");
      out.write("}</pre></div>\n");
      out.write("        <div>a<input type=\"radio\" name=\"101\" value=\"a\"> Won't compile since GradStudent doesn't have a getInfo method</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"101\" value=\"b\"> Taco</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"101\" value=\"c\"> Pizza</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"101\" value=\"d\"> Won't compile since you use this.getFood()</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>2.  Given the following class declarations, and EnhancedItem enItemObj = new EnhancedItem(); in a client class, which of the following statements would compile?<br>\n");
      out.write("<pre>\n");
      out.write("public class Item\n");
      out.write("{\n");
      out.write("   private int x;\n");
      out.write("\n");
      out.write("   public void setX(int theX)\n");
      out.write("   {\n");
      out.write("      x = theX;\n");
      out.write("   }\n");
      out.write("   // ... other methods not shown\n");
      out.write("}\n");
      out.write("\n");
      out.write("public class EnhancedItem extends Item<br>\n");
      out.write("{\n");
      out.write("   private int y;\n");
      out.write("\n");
      out.write("   public void setY(int theY)\n");
      out.write("   {\n");
      out.write("      y = theY;\n");
      out.write("   }\n");
      out.write("\n");
      out.write("  // ... other methods not shown<br>\n");
      out.write("}\n");
      out.write("I. enItemObj.y = 32;\n");
      out.write("II. enItemObj.setY(32);\n");
      out.write("III. enItemObj.setX(52);</pre></div>\n");
      out.write("        <div>a<input type=\"radio\" name=\"102\" value=\"a\"> I only</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"102\" value=\"b\"> II only</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"102\" value=\"c\"> I and II only</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"102\" value=\"d\"> II and III only</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>3. Given the following class declarations and initializations in a client program, which of the following is a correct call to method1?</div>\n");
      out.write("        <pre>\n");
      out.write("        public class Test1\n");
      out.write("{\n");
      out.write("   public void method1(Test2 v1, Test3 v2)\n");
      out.write("   {\n");
      out.write("      // rest of method not shown\n");
      out.write("   }\n");
      out.write("}\n");
      out.write("\n");
      out.write("public class Test2 extends Test1\n");
      out.write("{\n");
      out.write("}\n");
      out.write("\n");
      out.write("public class Test3 extends Test2\n");
      out.write("{\n");
      out.write("}\n");
      out.write("\n");
      out.write("The following initializations appear in a different class.\n");
      out.write("Test1 t1 = new Test1();\n");
      out.write("Test2 t2 = new Test2();\n");
      out.write("Test3 t3 = new Test3();\n");
      out.write("</pre>\n");
      out.write("        <div>a<input type=\"radio\" name=\"103\" value=\"a\"> t3.method1(t3,t3);</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"103\" value=\"b\"> t1.method1(t1,t1);</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"103\" value=\"c\"> t2.method1(t3,t2);</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"103\" value=\"d\"> t3.method1(t1,t1);</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>4.  If you have a parent class Animal that has a method speak() which returns: Awk. Cat has a speak method that returns: Meow. Bird does not have a speak method. Dog has a speak method that returns: Woof. Pig does not have a speak method. Cow has a speak method that returns: Moo. What is the output from looping through the array a created below and asking each element to speak()?</div>\n");
      out.write("        <prep>\n");
      out.write("            Animal[] a = { new Cat(), new Cow(), new Dog(), new Pig(), new Bird() }\n");
      out.write("        </prep>\n");
      out.write("        <div>a<input type=\"radio\" name=\"104\" value=\"a\"> Meow Moo Woof Awk Awk</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"104\" value=\"b\"> Awk Awk Awk Awk Awk</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"104\" value=\"c\"> This will have runtime errors</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"104\" value=\"d\"> Meow Moo Woof Oink Awk</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>5.  Given the following class declarations and code, what is the result when the code is run?</div>\n");
      out.write("        <prep>\n");
      out.write("            public class Car\n");
      out.write("{\n");
      out.write("   private int fuel;\n");
      out.write("\n");
      out.write("   public Car() { fuel = 0; }\n");
      out.write("   public Car(int g) { fuel = g; }\n");
      out.write("\n");
      out.write("   public void addFuel() { fuel++; }\n");
      out.write("   public void display() { System.out.print(fuel + \" \"); }\n");
      out.write("}\n");
      out.write("\n");
      out.write("public class RaceCar extends Car\n");
      out.write("{\n");
      out.write("   public RaceCar(int g) { super(2*g); }\n");
      out.write("}\n");
      out.write("\n");
      out.write("What is the result when the following code is compiled and run?\n");
      out.write("\n");
      out.write("Car car = new Car(5);\n");
      out.write("Car fastCar = new RaceCar(5);\n");
      out.write("car.display()\n");
      out.write("car.addFuel();\n");
      out.write("car.display();\n");
      out.write("fastCar.display();\n");
      out.write("fastCar.addFuel();\n");
      out.write("fastCar.display();\n");
      out.write("        </prep>\n");
      out.write("        \n");
      out.write("        <div>a<input type=\"radio\" name=\"105\" value=\"a\"> The code compiles and runs with no errors, the output is 5 6 5 6</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"105\" value=\"b\"> The code compiles and runs with no errors, the output is: 5 6 10 11</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"105\" value=\"c\"> The code compiles and runs with no errors, the output is 10 11 10 11</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"105\" value=\"d\"> The code won't compile.</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>6. Given the following class declarations and code, what is the result when the code is run?</div>\n");
      out.write("        <pre>\n");
      out.write("            public class Book\n");
      out.write("{\n");
      out.write("   public String getISBN()\n");
      out.write("   {\n");
      out.write("      // implementation not shown\n");
      out.write("   }\n");
      out.write("\n");
      out.write("   // constructors, fields, and other methods not shown\n");
      out.write("}\n");
      out.write("\n");
      out.write("public class Dictionary extends Book\n");
      out.write("{\n");
      out.write("   public String getDefinition(String word)\n");
      out.write("   {\n");
      out.write("      // implementation not shown\n");
      out.write("   }\n");
      out.write("\n");
      out.write("   // constructors, fields, and methods not shown\n");
      out.write("}\n");
      out.write("\n");
      out.write("Assume that the following declaration appears in a client class.\n");
      out.write("\n");
      out.write("Book b = new Dictionary();\n");
      out.write("\n");
      out.write("Which of the following statements would compile without error?\n");
      out.write("I.  b.getISBN();\n");
      out.write("II. b.getDefinition(\"wonderful\");\n");
      out.write("III. ((Dictionary) b).getDefinition(\"wonderful\");\n");
      out.write("        </pre>\n");
      out.write("        <div>a<input type=\"radio\" name=\"106\" value=\"a\"> I only</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"106\" value=\"b\"> II only </div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"106\" value=\"c\"> I and III only</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"106\" value=\"d\"> III only</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>7. What will be the output of the following Java code?</div>\n");
      out.write("        <prep>\n");
      out.write("            class output \n");
      out.write("    {\n");
      out.write("        public static void main(String args[])\n");
      out.write("        {\n");
      out.write("            char c[]={'a', '1', 'b' ,' ' ,'A' , '0'};\n");
      out.write("            for (int i = 0; i < 5; ++i)\n");
      out.write("            {\n");
      out.write("                   if(Character.isDigit(c[i]))\n");
      out.write("                       System.out.println(c[i]+\" is a digit\");\n");
      out.write("                   if(Character.isWhitespace(c[i]))\n");
      out.write("                       System.out.println(c[i]+\" is a Whitespace character\");\n");
      out.write("                   if(Character.isUpperCase(c[i]))\n");
      out.write("                       System.out.println(c[i]+\" is an Upper case Letter\");\n");
      out.write("                   if(Character.isLowerCase(c[i]))\n");
      out.write("                       System.out.println(c[i]+\" is a lower case Letter\");\n");
      out.write("               i=i+3;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("a)\n");
      out.write("        </prep>\n");
      out.write("        <div>a<input type=\"radio\" name=\"107\" value=\"a\"> a is a lower case Letter is White space character</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"107\" value=\"b\"> b is a lower case Letter is White space character</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"107\" value=\"c\"> a is a lower case Letter A is an upper case Letter</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"107\" value=\"d\">  a is a lower case Letter 0 is a digit</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>8.  Object-oriented inheritance models the</div>\n");
      out.write("        <div>a<input type=\"radio\" name=\"108\" value=\"a\"> âis a kind ofâ relationship</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"108\" value=\"b\"> âhas aâ relationship</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"108\" value=\"c\"> inheritance does not describe any kind of relationship between classes</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"108\" value=\"d\"> âcontainsâ of relationship.</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>9. Predict output of following</div>\n");
      out.write("        <pre>\n");
      out.write("            class First\n");
      out.write("{\n");
      out.write("\tint i = 10;\n");
      out.write("\n");
      out.write("\tpublic First(int j)\n");
      out.write("\t{\n");
      out.write("\t\tSystem.out.println(i);\n");
      out.write("\t\tthis.i = j * 10;\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("class Second extends First\n");
      out.write("{\n");
      out.write("\tpublic Second(int j)\n");
      out.write("\t{\n");
      out.write("\t\tsuper(j);\n");
      out.write("\t\tSystem.out.println(i);\n");
      out.write("\t\tthis.i = j * 20;\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("public class MainClass\n");
      out.write("{\n");
      out.write("\tpublic static void main(String[] args)\n");
      out.write("\t{\n");
      out.write("\t\tSecond n = new Second(20);\n");
      out.write("\t\tSystem.out.println(n.i);\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("        </pre>\n");
      out.write("        <div>a<input type=\"radio\" name=\"109\" value=\"a\"> 10 200 400</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"109\" value=\"b\"> 20 400 600</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"109\" value=\"c\"> 5 100 200</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"109\" value=\"d\"> 10 250 400</div>  \n");
      out.write("        </div>\n");
      out.write("        <div class=\"container\">\n");
      out.write("        <div>10. Predict output of following</div>\n");
      out.write("        <pre>import java.util.*;\n");
      out.write("class I\n");
      out.write("{\n");
      out.write("\tpublic static void main (String[] args)\n");
      out.write("\t{\n");
      out.write("\t\tObject i = new ArrayList().iterator();\n");
      out.write("\t\tSystem.out.print((i instanceof List) + \", \");\n");
      out.write("\t\tSystem.out.print((i instanceof Iterator) + \", \");\n");
      out.write("\t\tSystem.out.print(i instanceof ListIterator);\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("</pre>\n");
      out.write("        <div>a<input type=\"radio\" name=\"110\" value=\"a\"> false true false</div>\n");
      out.write("        <div>b<input type=\"radio\" name=\"110\" value=\"b\"> true false true</div>\n");
      out.write("        <div>c<input type=\"radio\" name=\"110\" value=\"c\"> true true true</div>\n");
      out.write("        <div>d<input type=\"radio\" name=\"110\" value=\"d\"> false false false</div>  \n");
      out.write("        </div>\n");
      out.write("              <input class=\"btn\" type=\"submit\">\n");
      out.write("        ");

            session.setAttribute("status", "true");
         
      out.write(" \n");
      out.write("    </form>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
